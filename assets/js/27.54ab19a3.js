(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{417:function(e,v,_){"use strict";_.r(v);var o=_(9),t=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"promise-是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise-是什么"}},[e._v("#")]),e._v(" Promise 是什么?")]),e._v(" "),_("ul",[_("li",[e._v("一个具拥有 "),_("code",[e._v("then")]),e._v(" 方法且其行为符合 "),_("code",[e._v("Promise/A+")]),e._v(" 规范的对象或方法.")]),e._v(" "),_("li",[e._v("一个异步操作的最终结果.")])]),e._v(" "),_("h2",{attrs:{id:"promise-语法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise-语法"}},[e._v("#")]),e._v(" Promise 语法")]),e._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Promise")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("resolve"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" reject")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/** exxcutor */")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),_("p",[_("code",[e._v("executor")]),e._v(" 是一个带有 "),_("code",[e._v("resolve")]),e._v(" 和 "),_("code",[e._v("reject")]),e._v(" 两个函数作为参数的函数.")]),e._v(" "),_("p",[_("code",[e._v("Promise")]),e._v(" 构造函数执行时, 立即调用 "),_("code",[e._v("executor")]),e._v(" 函数, "),_("code",[e._v("resolve")]),e._v(" 和 "),_("code",[e._v("reject")]),e._v(" 两个函数作为参数传递给 "),_("code",[e._v("executor")]),e._v(". "),_("code",[e._v("executor")]),e._v("函数内部可执行一些异步操作, 待异步操作执行完成(成功/失败),"),_("code",[e._v("resolve")]),e._v(" 和 "),_("code",[e._v("reject")]),e._v(" 函数被调用时, 分别将 "),_("code",[e._v("Promise")]),e._v(" 状态 改为 "),_("code",[e._v("fulfilled")]),e._v(" (完成) 或 "),_("code",[e._v("rejected")]),e._v("(失败). 且 "),_("code",[e._v("executor")]),e._v(" 函数的返回值将被忽略.")]),e._v(" "),_("p",[_("code",[e._v("Promise")]),e._v(" 对象是一个代理对象, 被代理的值可能是未知的. 允许为异步操作的成功或失败绑定相应处理方法.")]),e._v(" "),_("h2",{attrs:{id:"promise-a-标准"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise-a-标准"}},[e._v("#")]),e._v(" Promise/A+ 标准")]),e._v(" "),_("p",[_("a",{attrs:{href:"https://promisesaplus.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise/A+ 标准"),_("OutboundLink")],1)]),e._v(" "),_("h3",{attrs:{id:"术语"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#术语"}},[e._v("#")]),e._v(" 术语")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("promise")]),e._v(" 一个具拥有 "),_("code",[e._v("then")]),e._v(" 方法且其行为符合规范的对象或方法.")]),e._v(" "),_("li",[_("code",[e._v("thenable")]),e._v(" 一个定义了 "),_("code",[e._v("then")]),e._v(" 方法的对象或函数.")]),e._v(" "),_("li",[_("code",[e._v("value")]),e._v(" 指任何 JavaScript 的合法值("),_("code",[e._v("undefined")]),e._v(","),_("code",[e._v("thenable")]),e._v(","),_("code",[e._v("promise")]),e._v(")")]),e._v(" "),_("li",[_("code",[e._v("exception")]),e._v(" 使用 "),_("code",[e._v("throw")]),e._v(" 抛出的一个值")]),e._v(" "),_("li",[_("code",[e._v("reason")]),e._v("一个表示 promise 的拒绝原因")])]),e._v(" "),_("h3",{attrs:{id:"要求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#要求"}},[e._v("#")]),e._v(" 要求")]),e._v(" "),_("h4",{attrs:{id:"promise-状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise-状态"}},[e._v("#")]),e._v(" Promise 状态")]),e._v(" "),_("p",[e._v("一个 "),_("code",[e._v("Promise")]),e._v(" 的状态必须为以下状态的一种: "),_("code",[e._v("pending")]),e._v("(等待态)、"),_("code",[e._v("fulfilled")]),e._v("(执行态) 、 "),_("code",[e._v("rejected")]),e._v("(拒绝态).")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("panding")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("promise")]),e._v(" 可以迁移至 "),_("code",[e._v("fulfilled")]),e._v(" / "),_("code",[e._v("rejected")]),e._v(" 状态")])])]),e._v(" "),_("li",[_("code",[e._v("fulfilled")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("promise")]),e._v(" 不能迁移至其他任何状态")]),e._v(" "),_("li",[_("code",[e._v("promise")]),e._v(" 必须拥有一个"),_("strong",[e._v("不可变")]),e._v("的终值")])])]),e._v(" "),_("li",[_("code",[e._v("rejected")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("promise")]),e._v(" 不能转为其他任何状态")]),e._v(" "),_("li",[_("code",[e._v("promise")]),e._v(" 必须拥有一个"),_("strong",[e._v("不可变")]),e._v("的拒因")])])])]),e._v(" "),_("blockquote",[_("p",[e._v("不可变 => 基本值/引用地址不变的对象")])]),e._v(" "),_("h4",{attrs:{id:"then-方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#then-方法"}},[e._v("#")]),e._v(" then 方法")]),e._v(" "),_("p",[e._v("一个 "),_("code",[e._v("promise")]),e._v(" 必须提供一个"),_("code",[e._v("then")]),e._v("方法, 以访问当前值、终值、拒因")]),e._v(" "),_("p",[_("code",[e._v("then")]),e._v(" 方法接受两个参数")]),e._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" promise1 "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Promise")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("resolve"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" reject")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/** executor */")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" promise2 "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" promise1"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("then")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("onFulfilled"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" onRejected"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),_("ul",[_("li",[_("p",[_("code",[e._v("onFulfilled")]),e._v(" 与 "),_("code",[e._v("onRejected")]),e._v(" 皆为可选参数.")]),e._v(" "),_("ul",[_("li",[e._v("若 "),_("code",[e._v("onFulfilled")]),e._v(" 不是函数, 其必须被忽略.")]),e._v(" "),_("li",[e._v("若 "),_("code",[e._v("onRejected")]),e._v(" 不是函数, 其必须被忽略.")])])]),e._v(" "),_("li",[_("p",[e._v("若 "),_("code",[e._v("onFulfilled")]),e._v(" 是一个函数.")]),e._v(" "),_("ul",[_("li",[e._v("在 "),_("code",[e._v("promise")]),e._v(" 执行结束前其不可被调用.")]),e._v(" "),_("li",[e._v("当 "),_("code",[e._v("promise")]),e._v(" 执行结束后其必须被调用, 第一个参数为 "),_("code",[e._v("promise")]),e._v("的终值.")]),e._v(" "),_("li",[e._v("其调用次数不可超过一次.")])])]),e._v(" "),_("li",[_("p",[e._v("若 "),_("code",[e._v("onRejected")]),e._v(" 是一个函数.")]),e._v(" "),_("ul",[_("li",[e._v("在 "),_("code",[e._v("promise")]),e._v(" 被拒绝执行前其不可被调用.")]),e._v(" "),_("li",[e._v("当 "),_("code",[e._v("promise")]),e._v(" 被拒绝执行后其必须被调用, 第一个参数为 "),_("code",[e._v("promise")]),e._v("的拒因.")]),e._v(" "),_("li",[e._v("其调用次数不可超过一次.")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("onFulfilled")]),e._v(" 与 "),_("code",[e._v("onRejected")]),e._v(" 调用时机.")]),e._v(" "),_("ul",[_("li",[e._v("当且仅当执行堆栈中仅包含平台代码时才可被调用.")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("onFulfilled")]),e._v(" 与 "),_("code",[e._v("onRejected")]),e._v(" 调用要求.")]),e._v(" "),_("ul",[_("li",[e._v("必须被作为函数调用(即无"),_("code",[e._v("this")]),e._v("值).")])])]),e._v(" "),_("li",[_("p",[e._v("多次调用")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("then")]),e._v(" 方法可以被同一个 "),_("code",[e._v("promise1")]),e._v(" 调用多次.\n"),_("ul",[_("li",[e._v("当 "),_("code",[e._v("promise1")]),e._v(" 成功执行时, 所有 "),_("code",[e._v("onFulfilled")]),e._v(" 需按照其注册顺序依次回调.")]),e._v(" "),_("li",[e._v("当 "),_("code",[e._v("promise1")]),e._v(" 被拒绝执行时, 所有 "),_("code",[e._v("onRejected")]),e._v(" 需按照其注册顺序依次回调.")])])])])]),e._v(" "),_("li",[_("p",[e._v("返回")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("then")]),e._v(" 方法必须返回一个 "),_("code",[e._v("promise")]),e._v(" 对象.")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("若 "),_("code",[e._v("onFulfilled")]),e._v(" 或 "),_("code",[e._v("onRejected")]),e._v(" 返回一个值 "),_("code",[e._v("x")]),e._v(", 则执行 "),_("code",[e._v("Promise 解决过程")]),e._v("(Promise 解决过程是一个抽象的操作, 其需输入一个 "),_("code",[e._v("promise")]),e._v(" 和一个值, 表示为 "),_("code",[e._v("[[Resolve]](promise, x)")]),e._v("):")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("x")]),e._v(" 与 "),_("code",[e._v("promise")]),e._v(" 相等, 以"),_("code",[e._v("TypeError")]),e._v("为拒因拒绝执行 "),_("code",[e._v("promise")]),e._v(".")]),e._v(" "),_("li",[_("code",[e._v("x")]),e._v(" 为 "),_("code",[e._v("Promise")]),e._v(", 使用 "),_("code",[e._v("promise")]),e._v(" 接收 "),_("code",[e._v("x")]),e._v(" 的状态.")]),e._v(" "),_("li",[_("code",[e._v("x")]),e._v(" 为对象或函数:\n"),_("ul",[_("li",[e._v("取 "),_("code",[e._v("x.then")]),e._v(" 值时抛出错误 "),_("code",[e._v("e")]),e._v(",则以 "),_("code",[e._v("e")]),e._v("为拒因拒绝 "),_("code",[e._v("promise")]),e._v(".")]),e._v(" "),_("li",[e._v("若 "),_("code",[e._v("x.then")]),e._v(" 为函数, 则将 "),_("code",[e._v("x")]),e._v(" 作为函数作用域调用. 传递两个回调函数作为参数 ("),_("code",[e._v("resolvePromise")]),e._v(", "),_("code",[e._v("rejectPromise")]),e._v(").\n"),_("ul",[_("li",[e._v("若 "),_("code",[e._v("resolvePromise")]),e._v(" 以值 "),_("code",[e._v("y")]),e._v(" 为参数被调用, 则执行 "),_("code",[e._v("[[Resolve]](promise, y)")]),e._v(".")]),e._v(" "),_("li",[e._v("若 "),_("code",[e._v("rejectPromise")]),e._v(" 以拒因 "),_("code",[e._v("r")]),e._v(" 为参数被调用, 则以 拒因 "),_("code",[e._v("r")]),e._v(" 拒绝 "),_("code",[e._v("promise")]),e._v(".")]),e._v(" "),_("li",[e._v("若 "),_("code",[e._v("resolvePromise")]),e._v(" 和 "),_("code",[e._v("rejectPromise")]),e._v(" 均被调用, 或者被同一参数调用多次, 则优先采用首次调用并忽略剩下的调用.")]),e._v(" "),_("li",[e._v("若调用 "),_("code",[e._v("then")]),e._v(" 方法时抛出了异常 "),_("code",[e._v("e")]),e._v(" "),_("ul",[_("li",[e._v("若 "),_("code",[e._v("resolvePromise")]),e._v("与"),_("code",[e._v("rejectPromise")]),e._v(" 都已被调用, 则忽略.")]),e._v(" "),_("li",[e._v("否则以拒因"),_("code",[e._v("e")]),e._v("拒绝"),_("code",[e._v("promise")]),e._v(".")])])])])]),e._v(" "),_("li",[e._v("若 "),_("code",[e._v("x.then")]),e._v(" 不是函数, 则以 "),_("code",[e._v("x")]),e._v(" 为参数执行 "),_("code",[e._v("promise")]),e._v(".")])])]),e._v(" "),_("li",[_("code",[e._v("x")]),e._v(" 不为对象或者函数，以 "),_("code",[e._v("x")]),e._v(" 为参数执行 "),_("code",[e._v("promise")])])])]),e._v(" "),_("li",[_("p",[e._v("若 "),_("code",[e._v("onFulfilled")]),e._v(" 或 "),_("code",[e._v("onRejected")]),e._v(" 抛出异常 "),_("code",[e._v("e")]),e._v(", "),_("code",[e._v("promise2")]),e._v(" 必须拒绝执行, 并返回拒因 "),_("code",[e._v("e")]),e._v(".")])]),e._v(" "),_("li",[_("p",[e._v("若 "),_("code",[e._v("onFulfilled")]),e._v(" 不是函数且 "),_("code",[e._v("promise1")]),e._v(" 成功执行, "),_("code",[e._v("promise2")]),e._v(" 必须执行成功并且返回相同的值.")])]),e._v(" "),_("li",[_("p",[e._v("若 "),_("code",[e._v("onRejected")]),e._v(" 不是函数且 "),_("code",[e._v("promise1")]),e._v(" 决绝执行, "),_("code",[e._v("promise2")]),e._v(" 必须决绝执行并且返回相同的拒因.")])])])])])])]),e._v(" "),_("h2",{attrs:{id:"promise-conformant-implementations"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise-conformant-implementations"}},[e._v("#")]),e._v(" Promise Conformant Implementations")]),e._v(" "),_("h3",{attrs:{id:"adehun"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#adehun"}},[e._v("#")]),e._v(" Adehun")]),e._v(" "),_("p",[_("a",{attrs:{href:"https://promisesaplus.com/implementations",target:"_blank",rel:"noopener noreferrer"}},[e._v("Promise Conformant Implementations"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.ituring.com.cn/article/66566",target:"_blank",rel:"noopener noreferrer"}},[e._v("图灵社区: Promises/A+规范"),_("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=t.exports}}]);