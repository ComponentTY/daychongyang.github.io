(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{239:function(t,e,a){"use strict";a.r(e);var s=a(28),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("三种基础数据结构")]),t._v(" "),a("p",[t._v("栈("),a("code",[t._v("stack")]),t._v(")、堆("),a("code",[t._v("heap")]),t._v(")、队列("),a("code",[t._v("queue")]),t._v(")")])]),t._v(" "),a("h2",{attrs:{id:"栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),a("blockquote",[a("p",[t._v("数据结构, 数据存取方式. (先进后出,后进先出)")])]),t._v(" "),a("blockquote",[a("p",[t._v("函数调用栈("),a("code",[t._v("call stack")]),t._v("), 规定代码执行顺序.")])]),t._v(" "),a("blockquote",[a("p",[t._v("栈区, 数据在内存中的存储区域.("),a("code",[t._v("JS")]),t._v(" 中, 不区分栈区或堆区, 所有数据全部存放在堆内存中.)")])])])}),[],!1,null,null,null);e.default=o.exports}}]);