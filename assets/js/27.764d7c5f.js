(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{368:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("JavaScript 引擎执行过程:")]),t._v(" "),a("ol",[a("li",[t._v("语法分析(分析该 JS 脚本代码块的语法是否正确,如果不正确,则向外部抛出一个错误(SyntaxError),停止该 JS 代码块的执行, 继续查找并加载下一个代码块并进行语法分析; 如果语法正确, 则进入预编译阶段....)")]),t._v(" "),a("li",[t._v("预编译阶段\n"),a("ul",[a("li",[t._v("创建 全局执行上下文.")]),t._v(" "),a("li",[t._v("每有一个函数被调用执行, 其对应的一个新的函数执行上下文将会被创建.")]),t._v(" "),a("li",[t._v("每一个执行上下文都提供了 "),a("code",[t._v("this")]),t._v(" 关键字, 指向当前正在执行那个的代码所属的对象.")])])]),t._v(" "),a("li",[t._v("执行阶段")])]),t._v(" "),a("h2",{attrs:{id:"执行上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[t._v("#")]),t._v(" 执行上下文")]),t._v(" "),a("h3",{attrs:{id:"什么是执行上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是执行上下文"}},[t._v("#")]),t._v(" 什么是执行上下文?")]),t._v(" "),a("p",[t._v("执行上下文是解析和执行 JavaScript 代码时的所在环境的抽象概念.")]),t._v(" "),a("h3",{attrs:{id:"执行上下文的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文的类型"}},[t._v("#")]),t._v(" 执行上下文的类型")]),t._v(" "),a("ul",[a("li",[t._v("全局执行上下文(一个程序中只会有一个全局上下文)")]),t._v(" "),a("li",[t._v("函数执行上下文(每当一个函数被调用,都会为该函数创建一个新的上下文.每个函数都有自己的上下文.)")]),t._v(" "),a("li",[t._v("Eval 函数执行上下文")])]),t._v(" "),a("h3",{attrs:{id:"执行上下文的创建阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文的创建阶段"}},[t._v("#")]),t._v(" 执行上下文的创建阶段")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建阶段")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("绑定 "),a("code",[t._v("this")])]),t._v(" "),a("ul",[a("li",[t._v("全局执行上下文, "),a("code",[t._v("this")]),t._v(" 的值指向全局对象.")]),t._v(" "),a("li",[t._v("函数执行上下文, "),a("code",[t._v("this")]),t._v(" 的值取决于如何被调用. 若被一个引用对象调用, "),a("code",[t._v("this")]),t._v(" 指向此引用对象,否则 "),a("code",[t._v("this")]),t._v(" 指向 全局对象或"),a("code",[t._v("undefined")]),t._v("(严格模式)")])])]),t._v(" "),a("li",[a("p",[t._v("创建 LexicalEnvironment（词法环境）组件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("词法环境类型")]),t._v(" "),a("ul",[a("li",[t._v("全局环境: 外部环境引用为 "),a("code",[t._v("null")]),t._v(", "),a("code",[t._v("this")]),t._v(" 指向全局对象.")]),t._v(" "),a("li",[t._v("函数环境: 函数内部声明的变量存储在环境记录器中, 且外部环境可能是全局环境或者包含此函数的外部函数.")])])]),t._v(" "),a("li",[a("p",[t._v("词法环境内部组件")]),t._v(" "),a("ul",[a("li",[t._v("环境记录器: 存储变量和函数声明的实际位置\n"),a("ul",[a("li",[t._v("环境记录器类型\n"),a("ul",[a("li",[t._v("对象环境记录器(全局执行上下文)")]),t._v(" "),a("li",[t._v("声明式环境记录器(函数执行上下文) 包含 "),a("code",[t._v("arguments")])])])])])]),t._v(" "),a("li",[t._v("外部环境的引用: 访问其外部词法环境(作用域)")])])])])]),t._v(" "),a("li",[a("p",[t._v("创建 VariableEnvironment（变量环境）组件")]),t._v(" "),a("ul",[a("li",[t._v("变量环境同样是词法环境, 词法环境仅用作存储函数声明和变量("),a("code",[t._v("let")]),t._v(","),a("code",[t._v("const")]),t._v(")绑定, 变量环境仅用于存储"),a("code",[t._v("var")]),t._v("变量绑定.")])])])])])]),t._v(" "),a("h4",{attrs:{id:"变量提升的原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量提升的原因"}},[t._v("#")]),t._v(" 变量提升的原因")]),t._v(" "),a("p",[t._v("在执行上下文创建阶段, 函数声明存储在词法环境中,使用 "),a("code",[t._v("var")]),t._v(" 声明的变量,会被设置为"),a("code",[t._v("undefined")]),t._v("存储在变量环境中, 而使用 "),a("code",[t._v("let")]),t._v("、"),a("code",[t._v("const")]),t._v("声明的变量在词法环境中保持未初始化.")]),t._v(" "),a("ul",[a("li",[t._v("执行阶段\n"),a("ul",[a("li",[t._v("进入执行上下文")]),t._v(" "),a("li",[t._v("代码执行")])])])]),t._v(" "),a("h3",{attrs:{id:"执行上下文的重要组成属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文的重要组成属性"}},[t._v("#")]),t._v(" 执行上下文的重要组成属性")]),t._v(" "),a("ul",[a("li",[t._v("this")]),t._v(" "),a("li",[t._v("作用域链(Scope chain)")]),t._v(" "),a("li",[t._v("变量对象( Variable object, VO)")])]),t._v(" "),a("h2",{attrs:{id:"执行栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行栈"}},[t._v("#")]),t._v(" 执行栈")]),t._v(" "),a("h3",{attrs:{id:"什么是执行执行栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是执行执行栈"}},[t._v("#")]),t._v(" 什么是执行执行栈?")]),t._v(" "),a("p",[t._v("函数调用栈, 是一种拥有 FILO(先进后出) 数据结构的栈, 用于存储代码运行时创建的所有执行上下文.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Inside first function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("second")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Again inside first function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("second")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Inside second function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Inside Global Execution Context"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"/javascript/execution-context.png",alt:"执行上下文"}})]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understanding Execution Context and Execution Stack in Javascript"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);