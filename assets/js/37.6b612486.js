(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{378:function(t,a,v){"use strict";v.r(a);var _=v(9),e=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"三种基础数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三种基础数据结构"}},[t._v("#")]),t._v(" 三种基础数据结构")]),t._v(" "),v("p",[t._v("栈("),v("code",[t._v("stack")]),t._v(")、堆("),v("code",[t._v("heap")]),t._v(")、队列("),v("code",[t._v("queue")]),t._v(")")]),t._v(" "),v("h3",{attrs:{id:"栈"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("数据结构, 数据存取方式. ("),v("code",[t._v("LIFO")]),t._v(", Last In, First Out)")])]),t._v(" "),v("li",[v("p",[t._v("函数调用栈("),v("code",[t._v("call stack")]),t._v("), 规定代码执行顺序.")])]),t._v(" "),v("li",[v("p",[t._v("栈区, 数据在内存中的存储区域.("),v("code",[t._v("JS")]),t._v(" 中, 不区分栈区或堆区, 所有数据全部存放在堆内存中.)")])])]),t._v(" "),v("h3",{attrs:{id:"堆"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),v("p",[t._v("通常是一种树状结构(类似对象).")]),t._v(" "),v("h3",{attrs:{id:"队列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),v("p",[t._v("一种先进先出("),v("code",[t._v("FIFO")]),t._v(")的数据结构.")])])}),[],!1,null,null,null);a.default=e.exports}}]);